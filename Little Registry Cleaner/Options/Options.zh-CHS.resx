<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="mscorlib" name="mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>
  <data name="checkBoxShowLog.Text" xml:space="preserve">
    <value>显示记录完成扫描后</value>
  </data>
  <data name="checkBoxRemDrives.Text" xml:space="preserve">
    <value>在可移动媒体忽略丢失的文件</value>
  </data>
  <data name="checkBoxAutoUpdate.Text" xml:space="preserve">
    <value>自动检查更新</value>
  </data>
  <data name="checkBoxRestore.Text" xml:space="preserve">
    <value>创建系统还原点自动</value>
  </data>
  <data name="checkBoxDeleteBackup.Text" xml:space="preserve">
    <value>删除备份文件恢复注册表后 </value>
  </data>
  <data name="checkBoxRescan.Text" xml:space="preserve">
    <value>重新修复后扫描注册表问题- </value>
  </data>
  <data name="checkBoxLog.Text" xml:space="preserve">
    <value>日志注册表扫描和修复</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>选项</value>
  </data>
  <data name="buttonOK.Text" xml:space="preserve">
    <value>行</value>
  </data>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="buttonBrowse1.Text" xml:space="preserve">
    <value>浏览...</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>选择一个备份文件夹中删除的注册表项 </value>
  </data>
  <data name="buttonBrowse2.Text" xml:space="preserve">
    <value>浏览...</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>选择一个文件夹保存日志文件</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>右键单击添加/删除项目</value>
  </data>
  <data name="columnHeader1.Text" xml:space="preserve">
    <value>文件和文件夹排除</value>
  </data>
  <data name="addFileToolStripMenuItem.Text" xml:space="preserve">
    <value>添加文件</value>
  </data>
  <data name="addFolderToolStripMenuItem.Text" xml:space="preserve">
    <value>添加文件夹</value>
  </data>
  <data name="addRegistryPathToolStripMenuItem.Text" xml:space="preserve">
    <value>添加注册表路径</value>
  </data>
  <data name="removeEntryToolStripMenuItem.Text" xml:space="preserve">
    <value>删除条目</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>忽略列表</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>小注册表清理器-选项</value>
  </data>
</root>
