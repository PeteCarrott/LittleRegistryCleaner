<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="crashReporterFail" xml:space="preserve">
    <value>错误报告无法发送</value>
  </data>
  <data name="crashReporterSuccess" xml:space="preserve">
    <value>成功发送错误报告</value>
  </data>
  <data name="mainAddExcludeEntry" xml:space="preserve">
    <value>新增选定的注册表项的排除列表</value>
  </data>
  <data name="mainAskExit" xml:space="preserve">
    <value>您确定要退出?</value>
  </data>
  <data name="mainFirstTimeRestorePoint" xml:space="preserve">
    <value>这是您第一次运行的小处清洁。\r\n您要创建一个还原点?</value>
  </data>
  <data name="mainInvalidHelpFile" xml:space="preserve">
    <value>无法找到小处Cleaner.chm</value>
  </data>
  <data name="mainProblemsFix" xml:space="preserve">
    <value>你想解决问题的所有选择?</value>
  </data>
  <data name="mainProblemsRemoved" xml:space="preserve">
    <value>从注册表中删除的问题</value>
  </data>
  <data name="mainScanningAborted" xml:space="preserve">
    <value>中止扫描注册表</value>
  </data>
  <data name="mainScanningFinished" xml:space="preserve">
    <value>完成扫描注册表</value>
  </data>
  <data name="mainSelectSections" xml:space="preserve">
    <value>请选择一节扫描</value>
  </data>
  <data name="mainUpdateAsk" xml:space="preserve">
    <value>较新版本可用。您是否要下载?</value>
  </data>
  <data name="needAdmin" xml:space="preserve">
    <value>您必须是管理员才能运行此程序</value>
  </data>
  <data name="optionsExcludeDir" xml:space="preserve">
    <value>选择文件夹，以排除从注册表扫描</value>
  </data>
  <data name="optionsExcludeEmptyRegPath" xml:space="preserve">
    <value>注册表路径不能为空</value>
  </data>
  <data name="optionsExcludeFile" xml:space="preserve">
    <value>选择一个文件，从注册表中排除扫描</value>
  </data>
  <data name="optionsExcludeInvalidRegPath" xml:space="preserve">
    <value>指定的注册表项不存在</value>
  </data>
  <data name="optionsExcludeRemove" xml:space="preserve">
    <value>你确定?</value>
  </data>
  <data name="optionsSelectBackupDir" xml:space="preserve">
    <value>选择文件夹备份文件将被放置</value>
  </data>
  <data name="optionsSelectLogDir" xml:space="preserve">
    <value>选择文件夹的日志文件将被放置</value>
  </data>
  <data name="programAlreadyRunning" xml:space="preserve">
    <value>另一个程序似乎已经运行...</value>
  </data>
  <data name="restoreAsk" xml:space="preserve">
    <value>你确定?</value>
  </data>
  <data name="restoreError" xml:space="preserve">
    <value>错误恢复注册表</value>
  </data>
  <data name="restoreRestored" xml:space="preserve">
    <value>成功地恢复注册表</value>
  </data>
  <data name="scanDlgExit" xml:space="preserve">
    <value>你确定?</value>
  </data>
  <data name="scanDlgProgressBarScanning" xml:space="preserve">
    <value>扫描: </value>
  </data>
  <data name="smCannotFindFile" xml:space="preserve">
    <value>该文件找不到</value>
  </data>
  <data name="smEmptyName" xml:space="preserve">
    <value>快捷键/值名称不能为空</value>
  </data>
  <data name="smEmptyPath" xml:space="preserve">
    <value>文件路径不能为空</value>
  </data>
  <data name="smRan" xml:space="preserve">
    <value>试图运行:</value>
  </data>
  <data name="smRemove" xml:space="preserve">
    <value>您确定要删除此启动程序?</value>
  </data>
  <data name="smRemoved" xml:space="preserve">
    <value>删除选定的启动程序</value>
  </data>
  <data name="smRun" xml:space="preserve">
    <value>你确定要运行此程序?</value>
  </data>
  <data name="umForceUninstall" xml:space="preserve">
    <value>你确定要从注册表中删除该程序?</value>
  </data>
  <data name="umSearchText" xml:space="preserve">
    <value>按姓名搜索</value>
  </data>
  <data name="umUninstall" xml:space="preserve">
    <value>您确定要卸载此程序?</value>
  </data>
  <data name="updateLatest" xml:space="preserve">
    <value>您有最新版本</value>
  </data>
  <data name="updateNewer" xml:space="preserve">
    <value>较新的版本可用</value>
  </data>
</root>
